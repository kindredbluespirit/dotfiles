#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 0
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_gap 0

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 0
hc attr theme.floating.border_width 0
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0
hc set focus_follows_mouse 1

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

#
# KEYBINDINGS
#

# if you have a super key you will be much happier with Mod set to Mod4
# Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

# remove all existing keybindings
hc keyunbind --all

# hc keybind $Mod-Shift-q chain , quit , spawn pkill --signal HUP -x lxqt-panel
# hc keybind $Mod-Shift-r reload
# hc keybind $Mod-q close_and_remove
# hc keybind $Mod-Return spawn alacritty
# hc keybind $Mod-r remove # frame, not window


## splitting and focusing frames
# hc keybind $Mod-Left    and , split left    0.5 , focus left
# hc keybind $Mod-Down    and , split bottom  0.5 , focus down
# hc keybind $Mod-Up      and , split top     0.5 , focus up
# hc keybind $Mod-Right   and , split right   0.5 , focus right

# tags
tag_names=( 0 {1..9} )
tag_keys=( {1..9} 0 )
hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # hc keybind "$Mod-$key" use_index "$i"
        # hc keybind "$Mod-Shift-$key" move_index "$i"
        true
    fi
done

## layouting
hc keybind $Mod-Shift-space floating toggle # key binding inspired by i3
# hc keybind $Mod-f fullscreen toggle

#@ application menu
# hc keybind Ctrl-grave spawn rofi -show run

## dock
# hc keybind $Mod-space spawn dock toggle

## audio
# hc keybind XF86AudioRaiseVolume spawn sound +
# hc keybind XF86AudioLowerVolume spawn sound -
# hc keybind XF86AudioMute spawn sound t
# hc keybind XF86AudioMicMute spawn sound T

## backlight
# hc keybind XF86MonBrightnessUp spawn backlight +
# hc keybind XF86MonBrightnessDown spawn backlight -

##  power/lock
# hc keybind $Mod-l spawn slock
# hc keybind $Mod-Shift-l spawn powerctl suspend
# hc keybind $Mod-Shift-l spawn powerctl hibernate

## gaps
## lazy evaluation (evaluating variables at the time of running the command) is what you need and it isn't happening here
hc keybind $Mod-equal set window_gap $(($(herbstclient get window_gap) + 1))
hc keybind $Mod-minus set window_gap $(($(herbstclient get window_gap) - 1))
hc keybind $Mod-BackSpace set window_gap 0

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# wm_startup
